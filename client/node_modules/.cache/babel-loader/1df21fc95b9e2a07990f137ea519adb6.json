{"ast":null,"code":"import { goodreadsConfig } from './config';\nexport const fetchBook = async search => {\n  let results = [];\n  search = search.replace(' ', '+');\n  const callAPI = await fetch(\"http://cors-anywhere.herokuapp.com/https://www.goodreads.com/search/index.xml?key=\".concat(goodreadsConfig.apiKey, \"&q=\").concat(search));\n  const response = await callAPI.text();\n  const res = new window.DOMParser().parseFromString(response, 'text/xml');\n  const work = res.getElementsByTagName('work');\n\n  for (let i = 0; i < work.length; i++) {\n    let data = work[i].children[8];\n    results.push({\n      id: data.children[0].textContent,\n      title: data.children[1].textContent,\n      author: data.children[2].childNodes[3].textContent,\n      image: data.children[3].textContent,\n      smallImage: data.children[4].textContent,\n      publicationYear: work[i].children[4].textContent,\n      rating: work[i].children[7].textContent\n    });\n  }\n\n  return results;\n};","map":{"version":3,"sources":["/home/kaerah/Projects/book-review-app/client/src/components/api/fetchBook.js"],"names":["goodreadsConfig","fetchBook","search","results","replace","callAPI","fetch","apiKey","response","text","res","window","DOMParser","parseFromString","work","getElementsByTagName","i","length","data","children","push","id","textContent","title","author","childNodes","image","smallImage","publicationYear","rating"],"mappings":"AAAA,SAASA,eAAT,QAAgC,UAAhC;AACA,OAAO,MAAMC,SAAS,GAAG,MAAMC,MAAN,IAAgB;AACvC,MAAIC,OAAO,GAAG,EAAd;AACAD,EAAAA,MAAM,GAAGA,MAAM,CAACE,OAAP,CAAe,GAAf,EAAoB,GAApB,CAAT;AACA,QAAMC,OAAO,GAAG,MAAMC,KAAK,6FAEvBN,eAAe,CAACO,MAFO,gBAGnBL,MAHmB,EAA3B;AAKA,QAAMM,QAAQ,GAAG,MAAMH,OAAO,CAACI,IAAR,EAAvB;AACA,QAAMC,GAAG,GAAG,IAAIC,MAAM,CAACC,SAAX,GAAuBC,eAAvB,CAAuCL,QAAvC,EAAiD,UAAjD,CAAZ;AACA,QAAMM,IAAI,GAAGJ,GAAG,CAACK,oBAAJ,CAAyB,MAAzB,CAAb;;AAEA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,IAAI,CAACG,MAAzB,EAAiCD,CAAC,EAAlC,EAAsC;AACpC,QAAIE,IAAI,GAAGJ,IAAI,CAACE,CAAD,CAAJ,CAAQG,QAAR,CAAiB,CAAjB,CAAX;AACAhB,IAAAA,OAAO,CAACiB,IAAR,CAAa;AACXC,MAAAA,EAAE,EAAEH,IAAI,CAACC,QAAL,CAAc,CAAd,EAAiBG,WADV;AAEXC,MAAAA,KAAK,EAAEL,IAAI,CAACC,QAAL,CAAc,CAAd,EAAiBG,WAFb;AAGXE,MAAAA,MAAM,EAAEN,IAAI,CAACC,QAAL,CAAc,CAAd,EAAiBM,UAAjB,CAA4B,CAA5B,EAA+BH,WAH5B;AAIXI,MAAAA,KAAK,EAAER,IAAI,CAACC,QAAL,CAAc,CAAd,EAAiBG,WAJb;AAKXK,MAAAA,UAAU,EAAET,IAAI,CAACC,QAAL,CAAc,CAAd,EAAiBG,WALlB;AAMXM,MAAAA,eAAe,EAAEd,IAAI,CAACE,CAAD,CAAJ,CAAQG,QAAR,CAAiB,CAAjB,EAAoBG,WAN1B;AAOXO,MAAAA,MAAM,EAAEf,IAAI,CAACE,CAAD,CAAJ,CAAQG,QAAR,CAAiB,CAAjB,EAAoBG;AAPjB,KAAb;AASD;;AAED,SAAOnB,OAAP;AACD,CA1BM","sourcesContent":["import { goodreadsConfig } from './config';\nexport const fetchBook = async search => {\n  let results = [];\n  search = search.replace(' ', '+');\n  const callAPI = await fetch(\n    `http://cors-anywhere.herokuapp.com/https://www.goodreads.com/search/index.xml?key=${\n      goodreadsConfig.apiKey\n    }&q=${search}`\n  );\n  const response = await callAPI.text();\n  const res = new window.DOMParser().parseFromString(response, 'text/xml');\n  const work = res.getElementsByTagName('work');\n\n  for (let i = 0; i < work.length; i++) {\n    let data = work[i].children[8];\n    results.push({\n      id: data.children[0].textContent,\n      title: data.children[1].textContent,\n      author: data.children[2].childNodes[3].textContent,\n      image: data.children[3].textContent,\n      smallImage: data.children[4].textContent,\n      publicationYear: work[i].children[4].textContent,\n      rating: work[i].children[7].textContent\n    });\n  }\n\n  return results;\n};\n"]},"metadata":{},"sourceType":"module"}