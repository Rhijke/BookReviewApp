{"ast":null,"code":"var _jsxFileName = \"/home/kaerah/Projects/book-review-app/client/src/components/Login.js\";\nimport React, { Component } from 'react';\nimport './css/Login.css';\nimport firebase from './api/firebase';\nimport { Redirect } from 'react-router';\nexport class Login extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      email: '',\n      password: '',\n      error: '',\n      loggedIn: false\n    };\n\n    this.getUserID = async () => {\n      let user = await fetch(\"auth/goodreads\", {\n        accept: 'application/json'\n      });\n      let userJSON = user.parseJSON();\n      console.log(userJSON);\n    };\n\n    this.handleLogin = e => {\n      e.preventDefault();\n      firebase.auth().signInWithEmailAndPassword(this.state.email, this.state.password).then(this.onLoginSuccess.bind(this)).catch(error => {\n        let errorMessage = error.message;\n        alert(errorMessage);\n      });\n    };\n\n    this.handleLogout = e => {\n      e.preventDefault();\n      firebase.auth().signOut().then(() => {\n        console.log('logged out');\n        this.resetState(false);\n      });\n    };\n\n    this.resetState = loginState => {\n      this.setState({\n        email: '',\n        password: '',\n        loggedIn: loginState\n      });\n    };\n\n    this.onLoginSuccess = () => {\n      this.resetState(true);\n      console.log('successful login');\n    };\n\n    this.createAccount = () => {\n      firebase.auth().createUserWithEmailAndPassword(this.state.email, this.state.password).then(cred => {\n        return firebase.firestore().collection('users').doc(cred.user.uid).set({\n          savedBooks: []\n        });\n      }).then(() => this.onLoginSuccess.bind(this)).catch(error => {\n        let errorMessage = error.message;\n        alert(\"\".concat(errorMessage));\n      });\n    };\n  }\n\n  componentWillMount() {\n    if (!firebase.auth().currentUser) {\n      this.setState({\n        loggedIn: false\n      });\n    }\n  }\n\n  render() {\n    if (this.state.loggedIn) return React.createElement(Redirect, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }); // return (\n    // <div>\n    //   <h3 className=\"page-header\">Please login.</h3>\n    //   <form onSubmit={this.handleLogin}>\n    //     <div className=\"form-group\">\n    //       <label>Email</label>\n    //       <input\n    //         onChange={e => this.setState({ email: e.target.value })}\n    //         className=\"form-control\"\n    //         placeholder=\"Email\"\n    //         name=\"email\"\n    //         type=\"text\"\n    //       />\n    //     </div>\n    //     <div className=\"form-group\">\n    //       <label>Password</label>\n    //       <input\n    //         onChange={e => this.setState({ password: e.target.value })}\n    //         className=\"form-control\"\n    //         placeholder=\"Password\"\n    //         name=\"password\"\n    //         type=\"password\"\n    //       />\n    //     </div>\n    //     <button className=\"btn btn-dark\">Submit</button>\n    //   </form>\n    //   <button className=\"btn btn-dark\" onClick={this.createAccount}>\n    //     Create Account\n    //   </button>\n    // </div>\n    // );\n  }\n\n}\nexport default Login;","map":{"version":3,"sources":["/home/kaerah/Projects/book-review-app/client/src/components/Login.js"],"names":["React","Component","firebase","Redirect","Login","state","email","password","error","loggedIn","getUserID","user","fetch","accept","userJSON","parseJSON","console","log","handleLogin","e","preventDefault","auth","signInWithEmailAndPassword","then","onLoginSuccess","bind","catch","errorMessage","message","alert","handleLogout","signOut","resetState","loginState","setState","createAccount","createUserWithEmailAndPassword","cred","firestore","collection","doc","uid","set","savedBooks","componentWillMount","currentUser","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './css/Login.css';\nimport firebase from './api/firebase';\nimport { Redirect } from 'react-router';\nexport class Login extends Component {\n  state = {\n    email: '',\n    password: '',\n    error: '',\n    loggedIn: false\n  };\n  componentWillMount() {\n    if (!firebase.auth().currentUser) {\n      this.setState({\n        loggedIn: false\n      });\n    }\n  }\n  getUserID = async () => {\n    let user = await fetch(`auth/goodreads`, {\n      accept: 'application/json'\n    });\n    let userJSON = user.parseJSON();\n\n    console.log(userJSON);\n  };\n\n  handleLogin = e => {\n    e.preventDefault();\n    firebase\n      .auth()\n      .signInWithEmailAndPassword(this.state.email, this.state.password)\n      .then(this.onLoginSuccess.bind(this))\n      .catch(error => {\n        let errorMessage = error.message;\n        alert(errorMessage);\n      });\n  };\n\n  handleLogout = e => {\n    e.preventDefault();\n    firebase\n      .auth()\n      .signOut()\n      .then(() => {\n        console.log('logged out');\n        this.resetState(false);\n      });\n  };\n\n  resetState = loginState => {\n    this.setState({\n      email: '',\n      password: '',\n      loggedIn: loginState\n    });\n  };\n\n  onLoginSuccess = () => {\n    this.resetState(true);\n    console.log('successful login');\n  };\n\n  createAccount = () => {\n    firebase\n      .auth()\n      .createUserWithEmailAndPassword(this.state.email, this.state.password)\n      .then(cred => {\n        return firebase\n          .firestore()\n          .collection('users')\n          .doc(cred.user.uid)\n          .set({\n            savedBooks: []\n          });\n      })\n      .then(() => this.onLoginSuccess.bind(this))\n      .catch(error => {\n        let errorMessage = error.message;\n        alert(`${errorMessage}`);\n      });\n  };\n\n  render() {\n    if (this.state.loggedIn) return <Redirect to=\"/\" />;\n    // return (\n    // <div>\n    //   <h3 className=\"page-header\">Please login.</h3>\n    //   <form onSubmit={this.handleLogin}>\n    //     <div className=\"form-group\">\n    //       <label>Email</label>\n    //       <input\n    //         onChange={e => this.setState({ email: e.target.value })}\n    //         className=\"form-control\"\n    //         placeholder=\"Email\"\n    //         name=\"email\"\n    //         type=\"text\"\n    //       />\n    //     </div>\n    //     <div className=\"form-group\">\n    //       <label>Password</label>\n    //       <input\n    //         onChange={e => this.setState({ password: e.target.value })}\n    //         className=\"form-control\"\n    //         placeholder=\"Password\"\n    //         name=\"password\"\n    //         type=\"password\"\n    //       />\n    //     </div>\n    //     <button className=\"btn btn-dark\">Submit</button>\n    //   </form>\n    //   <button className=\"btn btn-dark\" onClick={this.createAccount}>\n    //     Create Account\n    //   </button>\n    // </div>\n    // );\n  }\n}\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}